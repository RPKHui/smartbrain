{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","components/Rank/Rank.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","Logo","options","max","height","width","paddingTop","alt","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","console","log","htmlFor","this","name","React","Component","Register","onNameChange","FaceRecognition","imageUrl","box","top","topRow","left","leftCol","bottom","bottomRow","right","rightCol","Rank","entries","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","particles","number","density","enable","value_area","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6a34296.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn) {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('signin')}>Sign Out</p>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('signin')}>Sign In</p>\r\n                <p className='f3 link dim black underline pa3 pointer' onClick={() => onRouteChange('register')}>Register</p>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.b6394610.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png'\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\"> \r\n                    <img style={{height: '100px', width: '100px', paddingTop: '5px'}} alt='logo' src={brain} />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures. Git it a try'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            } else {\r\n                console.log('dundun')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange} \r\n                                className=\"pa2 input-reset ba bg-transparent hover-white w-100\" \r\n                                type=\"email\" \r\n                                name=\"email-address\" \r\n                                id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange} \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                id=\"password\"/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick={this.onSubmitSignIn} \r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => this.props.onRouteChange('register')} \r\n                            className=\"f6 link dim black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input onChange={this.onNameChange}\r\n                                className=\"pa2 input-reset ba bg-transparent hover-white w-100\" \r\n                                type=\"text\" \r\n                                name=\"name\" \r\n                                id=\"name\"/>\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange}\r\n                                className=\"pa2 input-reset ba bg-transparent hover-white w-100\" \r\n                                type=\"email\" \r\n                                name=\"email-address\" \r\n                                id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange}\r\n                                className=\"b pa2 input-reset ba bg-transparent hover-white w-100\" \r\n                                type=\"password\" \r\n                                name=\"password\" \r\n                                id=\"password\"/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"submit\" \r\n                            value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputImage' alt=\"\" src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, left: box.leftCol, bottom: box.bottomRow, right: box.rightCol}} ></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current entry count is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n      id: '',\n      name: '',\n      email: '',\n      password: '',\n      entries: 0,\n      joined: ''\n  },\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        password: data.password,\n        entries: data.entries,\n        joined: data.joined\n      },\n    })\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'home') {\n      this.setState({isSignedIn: true})\n    } else {\n      this.setState(initialState)\n    }\n    this.setState({route: route})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data['outputs'][0]['data']['regions'][0]['region_info']['bounding_box'];\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('http://localhost:3000/imageurl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                input: this.state.input\n            })\n          })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count }))\n          })\n          .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const particleOptions = {\n      particles: {\n        number: {\n          value: 50,\n          density: {\n            enable: true,\n            value_area: 800\n          }\n        }\n      }\n    }\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particleOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home' \n          ? <div>\n              <Logo />\n              <Rank \n                name={this.state.user.name} \n                entries={this.state.user.entries}/>\n              <ImageLinkForm \n                onInputChange={this.onInputChange} \n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition \n                box={this.state.box} \n                imageUrl={this.state.imageUrl}/>\n            </div>\n          : (\n            this.state.route === 'signin'\n            ? <SignIn \n              loadUser={this.loadUser} \n              onRouteChange={this.onRouteChange}/>\n            : <Register \n              loadUser={this.loadUser} \n              onRouteChange={this.onRouteChange}/>\n          )\n        }\n        \n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}